---
- name: Resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      ignore_errors: true
      paths:
        - '{{ role_path }}/vars'

- name: Define basic packages
  set_fact:
    basic_packages: "{{ __basic_packages | list }}"
  when: basic_packages is not defined

- name: Define python base variable
  set_fact:
    python_base_packages: "{{ __python_base_packages | list }}"
  when: python_base_packages is not defined

- name: Define python dep packages
  set_fact:
    python_dep_packages: "{{ __python_dep_packages | list }}"
  when: python_dep_packages is not defined

- name: Define python packages
  set_fact:
    python_packages: "{{ __python_packages | list }}"
  when: python_packages is not defined

- name: Define pip packages
  set_fact:
    pip_packages: "{{ __pip_packages | list }}"
  when: pip_packages is not defined

- name: Define PIP executable
  set_fact:
    pip_executable: "{{ __pip_executable | default(omit) }}"
  when: pip_executable is not defined

- name: Define python all
  set_fact:
    python_all: "{{ python_packages | list + python_dep_packages | list }}"
  when: python_all is not defined

- name: Default Python source variables
  set_fact:
    python_src_exec: "python{{ python_src_version|regex_replace('(\\d+\\.\\d+)\\..*$', '\\\\1') }}"
  when: python_src_exec is not defined

- name: Define Python install form source
  set_fact:
    python_install_from_src: "{{ __python_install_from_src | default(false) }}"
  when: python_install_from_src is not defined

- name: Check which python version installed
  command: "which {{ python_src_exec }}"
  register: python_check_result
  failed_when: false
  changed_when: false
  check_mode: false

# Include Tasks

- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: setup-packages.yml
  when: ansible_os_family == 'Debian'

- include_tasks: install-python-from-source.yml
  when: python_install_from_src and (python_src_force_install or python_check_result.rc != 0)

- include_tasks: install-python-from-apt.yml
  when: ansible_os_family == 'Debian' and not python_install_from_src and python_check_result.rc != 0

- include_tasks: setup-python.yml
  when: ansible_os_family == 'Debian'
